package kr.or.ddit.controller;

import java.sql.SQLException;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import kr.or.ddit.dto.AdminVO;
import kr.or.ddit.dto.DoctorVO;
import kr.or.ddit.exception.InvalidPasswordException;
import kr.or.ddit.exception.NotFoundIdException;
import kr.or.ddit.service.DoctorService;




@Controller
@RequestMapping("login")
public class login {

	@Autowired
	private DoctorService doctorService;

	//login check filter
	@RequestMapping(value="/loginForm",method = RequestMethod.GET)
	public String loginForm(@RequestParam(defaultValue = "")String error, HttpServletResponse response) {
		String url = "login/loginForm";
		if(error.equals("-1")) {
			response.setStatus(302);
		}

		return url;
	}


	@RequestMapping("/login")
	public String login(DoctorVO vo, HttpSession session, RedirectAttributes rttr,AdminVO avo) throws Exception {

		avo.setAdminId(vo.getdId());

		System.out.println(vo.getdId());
		System.out.println(vo.getPwd());
		System.out.println(avo.getAdminId());
//		String url ="login/loginForm2";
		String url ="redirect:/index.do";

		try {

			doctorService.doctorStatusStart(vo.getdId());

			DoctorVO doctorLogin = doctorService.doctorLogin(vo);


				session.setAttribute("doctorLogin", doctorLogin);
				//model.addAttribute("doctorLogin", doctorLogin);
//				System.out.println("session!~!~@~!@~!@~!@~!@~~@!");


			} catch (NotFoundIdException | InvalidPasswordException e) {

				rttr.addFlashAttribute("loginfail","login");
				url ="redirect:/login/loginForm";
			} catch(SQLException e) {
				e.printStackTrace();
				throw e;
			}


		if(vo.getdId().equals("admin")) {
			// pwd 틀림
			System.out.println(vo.getdId());
			if(vo.getPwd().equals("admin")) {

				session.setAttribute("admin", avo.getAdminId());

				url = "redirect:/manager/manager";


			}

		}

		return url;

	}

	@RequestMapping(value = "/loginForm2")
	public String loginForm2() {
		String url ="login/loginForm2";
		return url;
	}

	@RequestMapping(value = "/logout", method = RequestMethod.GET)
	public String logout(HttpSession session, HttpServletRequest request) throws SQLException {
		String url = "redirect:/login/loginForm";

	    session = request.getSession();
		DoctorVO doctorvo = (DoctorVO) session.getAttribute("doctorLogin");


		System.out.println("vogetID!!@~@~"+doctorvo.getdId());

		doctorService.doctorStatusReset(doctorvo.getdId());

		session.invalidate();
		return url;

	}



}
