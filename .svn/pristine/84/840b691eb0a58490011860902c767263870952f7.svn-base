package kr.or.ddit.restController;

import java.io.File;
import java.io.FileInputStream;
import java.io.InputStream;
import java.util.HashMap;
import java.util.List;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;

import org.apache.commons.io.IOUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import kr.or.ddit.dto.ReserveHistoryVO;
import kr.or.ddit.service.CooperMyService;
import kr.or.ddit.service.MediRecoService;

@RestController
@RequestMapping("cooperation")
public class CooperationRestController {

	@Resource(name="doctorFilePath")
	private String doctorFilePath;


	@Resource(name="recoFilePath")
	private String recoFilePath;

	@Autowired
	private MediRecoService mediRecoService;
	@Autowired
	private CooperMyService myService;

//의료진 사진 얻기
	@RequestMapping("getPic")
	public  ResponseEntity<byte[]> getPic(String dPic)throws Exception{
		ResponseEntity<byte[]> entity = null;
		InputStream in = null;
		try {
			System.out.println(doctorFilePath);
			System.out.println(dPic);
			in = new FileInputStream(new File(doctorFilePath, dPic));
			entity = new ResponseEntity<byte[]>(IOUtils.toByteArray(in), HttpStatus.CREATED);
		}catch(Exception e) {
			e.printStackTrace();
		} finally {

			in.close();
		}
		return entity;
	}


	@RequestMapping("getChartPic")
	public  ResponseEntity<byte[]> getChartPic(String mpNo)throws Exception{
		ResponseEntity<byte[]> entity = null;
		InputStream in = null;
		try {
			System.out.println();
			System.out.println(mpNo);
			String temp = mediRecoService.getPic(mpNo);
			in = new FileInputStream(new File(recoFilePath,temp ));
			entity = new ResponseEntity<byte[]>(IOUtils.toByteArray(in), HttpStatus.CREATED);
		}catch(Exception e) {
			e.printStackTrace();
		} finally {

			in.close();
		}
		return entity;
	}


	@RequestMapping("/historySearch")
	public ResponseEntity<List<ReserveHistoryVO>> historySearch(HttpServletRequest request, String coNo,String date)throws Exception{
		ResponseEntity<List<ReserveHistoryVO>> entity = null;
		HashMap<String,String> map = new HashMap<String, String>();
		map.put("coNo", coNo);
		map.put("taDate", date);
		List<ReserveHistoryVO> historyList = myService.selectDateHistory(map);
		System.out.println("historyVO"+historyList);
		if(historyList .isEmpty()) {
			entity = new ResponseEntity<List<ReserveHistoryVO>>(historyList,HttpStatus.BAD_REQUEST);
		}else {
		entity = new ResponseEntity<List<ReserveHistoryVO>>(historyList,HttpStatus.OK);
		}

		return entity;
	}

	@RequestMapping("/restartHistory")
	public ResponseEntity<List<ReserveHistoryVO>> restartHistory(HttpServletRequest request, String coNo)throws Exception{
		ResponseEntity<List<ReserveHistoryVO>> entity = null;
		// 진료히스토리 구하기
				List<ReserveHistoryVO> historyList = myService.selectHistoryList(coNo);
				System.out.println("초기화historyVO"+historyList);
				if(historyList .isEmpty()) {
					entity = new ResponseEntity<List<ReserveHistoryVO>>(historyList,HttpStatus.BAD_REQUEST);
				}else {
				entity = new ResponseEntity<List<ReserveHistoryVO>>(historyList,HttpStatus.OK);
				}
		return entity;

	}

}
